{
	"info": {
		"_postman_id": "1a6ef4fc-47fb-462c-80ae-64e562dde9d3",
		"name": "localAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26356720"
	},
	"item": [
		{
			"name": "  http://localhost:3000/employees",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n            \"id\": \"6\",\r\n            \"firstName\": \"Omer Asaf\",\r\n            \"lastName\": \"Aymak\",\r\n            \"photo\": null\r\n        }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//status code\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//get request\r",
							"pm.test(\"Successful Get request\", () =>{\r",
							"    pm.expect(pm.response.code).to.be.oneOf([200,201]);\r",
							"});\r",
							"\r",
							"//testing headers presence\r",
							"pm.test(\"Content-Type header is present\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							"//content type\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"//time\r",
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"\r",
							"//RESPONSE BODY\r",
							"\r",
							"const jsonData = pm.response.json();\r",
							"pm.test(\"test data type of the response\", () =>{\r",
							"    pm.expect(jsonData).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.id).to.be.an(\"number\");\r",
							"    pm.expect(jsonData.name).to.be.an(\"string\");\r",
							"    pm.expect(jsonData.describtion).to.be.an(\"object\");\r",
							"    pm.expect(jsonData.price).to.be.an(\"number\");\r",
							"});\r",
							"\r",
							"//array properties\r",
							"pm.test(\"test array properties\", () =>{\r",
							"    pm.expect(jsonData.courses).to.include(\"Java\");\r",
							"    pm.expect(jsonData.courses).to.have.members(\"Java\",\"Selenium\",\"API\");\r",
							"})\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/items",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"id\": \"16\",\r\n  \"name\": \"pen\",\r\n  \"price\": 9.99,\r\n  \"courses\":[\r\n      \"Java\",\r\n      \"Selenium\",\r\n      \"API\"\r\n  ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "  http://localhost:3000/employees/employee",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"employees\": [\r\n      {\r\n        \"id\": \"1\",\r\n        \"firstName\": \"Tom\",\r\n        \"lastName\": \"Cruise\",\r\n        \"photo\": \"https://jsonformatter.org/img/tom-cruise.jpg\"\r\n      },\r\n      {\r\n        \"id\": \"2\",\r\n        \"firstName\": \"Maria\",\r\n        \"lastName\": \"Sharapova\",\r\n        \"photo\": \"https://jsonformatter.org/img/Maria-Sharapova.jpg\"\r\n      },\r\n      {\r\n        \"id\": \"3\",\r\n        \"firstName\": \"Robert\",\r\n        \"lastName\": \"Downey Jr.\",\r\n        \"photo\": \"https://jsonformatter.org/img/Robert-Downey-Jr.jpg\"\r\n      }\r\n    ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/employees/employee",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"employees",
						"employee"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/items/7",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/items/7",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"items",
						"7"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/items",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \"high school\":[{\r\n                      \"id\": \"1\",\r\n                       \"name\": \"ahmet\"\r\n                },\r\n                {\r\n                       \"id\": \"2\",\r\n                       \"name\": \"mehmet\"\r\n                },\r\n                {\r\n                       \"id\": \"3\",\r\n                       \"name\": \"veli\"\r\n                }\r\n                ]\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:3000/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"items"
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/items/items?id=SokW1ry",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/items/items?id=SokW1ry",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"items",
						"items"
					],
					"query": [
						{
							"key": "id",
							"value": "SokW1ry"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/items/items?id=SokW1ry",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/items/items?id=SokW1ry",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"items",
						"items"
					],
					"query": [
						{
							"key": "id",
							"value": "SokW1ry"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "http://localhost:3000/items",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/items",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						"items"
					]
				}
			},
			"response": []
		}
	]
}